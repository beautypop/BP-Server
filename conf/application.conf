# This is the main configuration file for the application.
# ~~~~~

# Modules management
# ~~~~~
play {
  modules {
    enabled += "be.objectify.deadbolt.java.DeadboltModule"
    enabled += "security.MyCustomDeadboltHook"
    enabled += "com.github.cleverage.elasticsearch.module.IndexModule"
  }
}

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.crypto.secret="`=mXBe@R^ZHyyh4x0:@@N5RI4?pCQpb74Z3BSV?Zh]QnTqQ>X6Tc:NrFl>7Fa=6@"

# The application languages
# ~~~~~
play.i18n.langs = [ "en" ]

# App name
application.name.display="BeautyPop"

# Base Url used by Play for reverse-resolving absolute URLs 
# when http request not exist e.g. mailing jobs
# ~~~~~
application.baseUrl="http://localhost:9000"
application.androidUrl="https://play.google.com/store/apps/details?id=com.beautypop.app"
application.iosUrl="https://itunes.apple.com/hk/app/beautypop-sell-your-style/id1105390610"

# Facebook app id
# ~~~~~
facebook.app.id=""

# Deployment environment
# ~~~~~
application.env=dev

# Bypass login 
# ~~~~~
login.bypass.all=false

# Signup daily cap 
# ~~~~~
signup.daily.threshold=500
signup.daily.limit=500

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Bootstrap data or not on startup (OFF for image server)
# ~~~~~
startup.data.bootstrap=true

# Run background tasks (OFF for image server)
# ~~~~~
run.backgroundtasks=true

# Router 
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point. 
# Furthermore, it's assumed your route file is named properly. 
# So for an application router like `conf/my.application.Router`,
# you may need to define a router file `my.application.routes`.
# Default to Routes in the root package (and `conf/routes`)
# application.router=my.application.Routes

# Database configuration
# ~~~~~ 
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""
#
# You can expose this datasource via JNDI if needed (Useful for JPA)
# db.default.jndiName=DefaultDS

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
#
# ebean.default="models.*"

#db=mysql
db.default.driver="com.mysql.jdbc.Driver"
db.default.url="jdbc:mysql://localhost:3306/beautypop-dev?characterEncoding=UTF-8"
db.default.username=root
#db.default.password=
db.default.jndiName=DefaultDS
jpa.default=defaultPersistenceUnit

#play.modules.disabled = ["play.api.cache.EhCacheModule"]
#ehcacheplugin=disabled

# hibernate-cache
hibernate.cache.use_second_level_cache=true

image.temp="/Users/keithlei/_Sourcecode/BeautyPop/BP-Server_master/temp/"
storage.path="/Users/keithlei/_Sourcecode/BeautyPop/BP-Server_master/storage/"
storage.static.path="/Users/keithlei/_Sourcecode/BeautyPop/BP-Server_master/storage/static/"
storage.user.noimage="/Users/keithlei/_Sourcecode/BeautyPop/BP-Server_master/storage/default/user.jpg"
storage.user.thumbnail.noimage="/Users/keithlei/_Sourcecode/BeautyPop/BP-Server_master/storage/default/user_thumbnail.jpg"
storage.user.cover.noimage="/Users/keithlei/_Sourcecode/BeautyPop/BP-Server_master/storage/default/cover.jpg"
storage.community.cover.noimage="/Users/keithlei/_Sourcecode/BeautyPop/BP-Server_master/storage/default/community_cover.jpg"
storage.community.cover.thumbnail.noimage="/Users/keithlei/_Sourcecode/BeautyPop/BP-Server_master/storage/default/community_cover_thumbnail.jpg"
storage.community.cover.mini.noimage="/Users/keithlei/_Sourcecode/BeautyPop/BP-Server_master/storage/default/community_cover_thumbnail.jpg"
storage.images.valid-extensions="gif,jpg,jpeg,png,bmp"
storage.partition.dir.max=20000

# Assets default caching for js, css, public images - 1 day (86400)
assets.defaultCache="max-age=86400"

# Feeds
feed.init.flush.all=true
feed.score.compute.base=100
feed.score.compute.decay.start=1
feed.score.compute.decay.velocity=1
feed.score.compute.schedule=2
feed.score.high.base=1000000
feed.score.randomize.percent=25
feed.home.count=500
feed.home.randomize.multiplier=5
feed.product.suggest.count=12
feed.product.suggest.randomize.multiplier=20
feed.snapshot.expiry.secs=300
feed.snapshot.long.expiry.secs=1800
feed.sold.cleanup.days=2
feed.category.ratio.from.days.before=30

# Events
event.message.email.apart.secs=1800

# Activity cleanup
activity.viewed.cleanup.days=365
activity.all.cleanup.days=365

# GCM
gcm.api.server.key=""

# APN
apn.dev.cert="/Users/keithlei/_Sourcecode/BeautyPop/BP-Server_master/conf/bp_cert_dev.p12"
apn.prod.cert=""
apn.api.pass=""
apn.api.isprod=false

# Sendgrid
sendgrid.mail.from.name=""
sendgrid.mail.from.address=""
sendgrid.authen.username=""
sendgrid.authen.password=""

# Deadbolt
include "play-authenticate/deadbolt.conf"

# SMTP
include "play-authenticate/smtp.dev.conf"

# And play authenticate
include "play-authenticate/mine.dev.conf"

#redis.keyprefix in the development mode should be name is developer, in production make it "prod"
redis.keyprefix="bp-dev_"
redis.host="127.0.0.1"
redis.timeout=5000

# Instagram details
instagram.clientId=""
instagram.clientSecret=""
instagram.redirectUrl="http://localhost:9000/assets/insta/importer/redirect.html"
instagram.facebook.redirectUrl="http://localhost:9000/assets/insta/importer/main.html#/connect"

# ElasticSearch Configuration
# ~~~~~

# define local mode or not
elasticsearch.local=true

# Comma-separated list of clients
#elasticsearch.client="192.168.0.46:9300"
# ex : elasticsearch.client="192.168.0.46:9300,192.168.0.47:9300"

# Name of the index
elasticsearch.index.name="bp-elasticsearch"

# define package or class separate by commas for loading @IndexType and @IndexMapping information
elasticsearch.index.clazzs="indexing.*"

# show request & result json of search request in log (it will be logged using Logger.debug())
elasticsearch.index.show_request=true

# load custom settings file ( load from classpath )
elasticsearch.config.resource="/Users/keithlei/_Sourcecode/BeautyPop/BP-Server_master/conf/elasticsearch.yml"
